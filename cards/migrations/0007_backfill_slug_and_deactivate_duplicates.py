# Generated by Django 5.0.1 on 2024-07-27 12:01

from django.db import migrations
from django.utils.text import slugify

def backfill_slugs(apps, schema_editor):
    Card = apps.get_model('cards', 'Card')
    User = apps.get_model('auth', 'User')
    db_alias = schema_editor.connection.alias

    users_with_cards = User.objects.filter(card__isnull=False).distinct()

    for user in users_with_cards:
        cards = list(Card.objects.filter(user=user).order_by('-created_at'))
        
        # The first card (most recent) is the active one
        if cards:
            latest_card = cards[0]
            base_slug = slugify(user.username)
            
            # Check if the slug is already taken by another user's card
            if Card.objects.using(db_alias).filter(slug=base_slug).exclude(pk=latest_card.pk).exists():
                latest_card.slug = f"{base_slug}-{user.pk}"
            else:
                latest_card.slug = base_slug
            
            latest_card.is_active = True
            latest_card.save(using=db_alias)

            # Deactivate older cards and give them a non-conflicting slug
            for i, old_card in enumerate(cards[1:]):
                old_card.is_active = False
                old_card.slug = f"{slugify(user.username)}-{old_card.pk}-old"
                old_card.save(using=db_alias)

class Migration(migrations.Migration):

    dependencies = [
        ('cards', '0006_add_slug_is_active'),
    ]

    operations = [
        migrations.RunPython(backfill_slugs, migrations.RunPython.noop),
    ]
